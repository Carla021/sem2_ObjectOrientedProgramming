The system is: Windows - 10.0.22621 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: D:/Apps/CLion 2022.3.2/bin/mingw/bin/gcc.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"

The C compiler identification is GNU, found in "C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/3.24.2/CompilerIdC/a.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: D:/Apps/CLion 2022.3.2/bin/mingw/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"

The CXX compiler identification is GNU, found in "C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/3.24.2/CompilerIdCXX/a.exe"

Determining if the C compiler works passed with the following output:
Change Dir: C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe -f Makefile cmTC_89a82/fast && D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe  -f CMakeFiles\cmTC_89a82.dir\build.make CMakeFiles/cmTC_89a82.dir/build
mingw32-make[1]: Entering directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_89a82.dir/testCCompiler.c.obj
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\gcc.exe"   -fdiagnostics-color=always -o CMakeFiles\cmTC_89a82.dir\testCCompiler.c.obj -c "C:\Users\Carla\Facultate\An1\Sem 2\OOP\labs\a8\a89-Carla021\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
Linking C executable cmTC_89a82.exe
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_89a82.dir\link.txt --verbose=1
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_89a82.dir/objects.a
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\ar.exe" qc CMakeFiles\cmTC_89a82.dir/objects.a @CMakeFiles\cmTC_89a82.dir\objects1.rsp
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\gcc.exe" -Wl,--whole-archive CMakeFiles\cmTC_89a82.dir/objects.a -Wl,--no-whole-archive -o cmTC_89a82.exe -Wl,--out-implib,libcmTC_89a82.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_89a82.dir\linklibs.rsp
mingw32-make[1]: Leaving directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'



Determining if the CXX compiler works passed with the following output:
Change Dir: C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe -f Makefile cmTC_80a31/fast && D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe  -f CMakeFiles\cmTC_80a31.dir\build.make CMakeFiles/cmTC_80a31.dir/build
mingw32-make[1]: Entering directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_80a31.dir/testCXXCompiler.cxx.obj
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\g++.exe"   -fdiagnostics-color=always -o CMakeFiles\cmTC_80a31.dir\testCXXCompiler.cxx.obj -c "C:\Users\Carla\Facultate\An1\Sem 2\OOP\labs\a8\a89-Carla021\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
Linking CXX executable cmTC_80a31.exe
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_80a31.dir\link.txt --verbose=1
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_80a31.dir/objects.a
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\ar.exe" qc CMakeFiles\cmTC_80a31.dir/objects.a @CMakeFiles\cmTC_80a31.dir\objects1.rsp
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\g++.exe" -Wl,--whole-archive CMakeFiles\cmTC_80a31.dir/objects.a -Wl,--no-whole-archive -o cmTC_80a31.exe -Wl,--out-implib,libcmTC_80a31.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_80a31.dir\linklibs.rsp
mingw32-make[1]: Leaving directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD succeeded with the following output:
Change Dir: C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe -f Makefile cmTC_d5255/fast && D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe  -f CMakeFiles\cmTC_d5255.dir\build.make CMakeFiles/cmTC_d5255.dir/build
mingw32-make[1]: Entering directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d5255.dir/src.c.obj
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\gcc.exe" -DCMAKE_HAVE_LIBC_PTHREAD  -fdiagnostics-color=always -o CMakeFiles\cmTC_d5255.dir\src.c.obj -c "C:\Users\Carla\Facultate\An1\Sem 2\OOP\labs\a8\a89-Carla021\cmake-build-debug\CMakeFiles\CMakeTmp\src.c"
Linking C executable cmTC_d5255.exe
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_d5255.dir\link.txt --verbose=1
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_d5255.dir/objects.a
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\ar.exe" qc CMakeFiles\cmTC_d5255.dir/objects.a @CMakeFiles\cmTC_d5255.dir\objects1.rsp
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\gcc.exe" -Wl,--whole-archive CMakeFiles\cmTC_d5255.dir/objects.a -Wl,--no-whole-archive -o cmTC_d5255.exe -Wl,--out-implib,libcmTC_d5255.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_d5255.dir\linklibs.rsp
mingw32-make[1]: Leaving directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Performing C++ SOURCE FILE Test HAVE_STDATOMIC succeeded with the following output:
Change Dir: C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe -f Makefile cmTC_584e2/fast && D:/Apps/CLion 2022.3.2/bin/mingw/bin/mingw32-make.exe  -f CMakeFiles\cmTC_584e2.dir\build.make CMakeFiles/cmTC_584e2.dir/build
mingw32-make[1]: Entering directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_584e2.dir/src.cxx.obj
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\g++.exe" -DHAVE_STDATOMIC  -fdiagnostics-color=always -o CMakeFiles\cmTC_584e2.dir\src.cxx.obj -c "C:\Users\Carla\Facultate\An1\Sem 2\OOP\labs\a8\a89-Carla021\cmake-build-debug\CMakeFiles\CMakeTmp\src.cxx"
Linking CXX executable cmTC_584e2.exe
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_584e2.dir\link.txt --verbose=1
"D:\Apps\CLion 2022.3.2\bin\cmake\win\x64\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_584e2.dir/objects.a
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\ar.exe" qc CMakeFiles\cmTC_584e2.dir/objects.a @CMakeFiles\cmTC_584e2.dir\objects1.rsp
"D:\Apps\CLion 2022.3.2\bin\mingw\bin\g++.exe" -Wl,--whole-archive CMakeFiles\cmTC_584e2.dir/objects.a -Wl,--no-whole-archive -o cmTC_584e2.exe -Wl,--out-implib,libcmTC_584e2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_584e2.dir\linklibs.rsp
mingw32-make[1]: Leaving directory 'C:/Users/Carla/Facultate/An1/Sem 2/OOP/labs/a8/a89-Carla021/cmake-build-debug/CMakeFiles/CMakeTmp'


Source file was:
#include <atomic>
#include <cstdint>

int main(int, char **)
{
    volatile std::atomic<char>    size_1;
    volatile std::atomic<short>   size_2;
    volatile std::atomic<int>     size_4;
    volatile std::atomic<int64_t> size_8;

    ++size_1;
    ++size_2;
    ++size_4;
    ++size_8;

    (void)size_1.load(std::memory_order_relaxed);
    (void)size_2.load(std::memory_order_relaxed);
    (void)size_4.load(std::memory_order_relaxed);
    (void)size_8.load(std::memory_order_relaxed);

    return 0;
}
